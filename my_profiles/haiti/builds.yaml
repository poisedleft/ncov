
## This YAML file is sparsely commented, with a focus on the parts relevant to multiple inputs
## See my_profiles/example/builds.yaml for more general comments
## See docs/multiple_inputs.md for a walkthrough of this config.

# custom_rules:
#   - my_profiles/example_multiple_inputs/rules.smk

inputs:
  - name: "haiti" #sammples downloaded from GISAID for "haiti"  
    metadata: "/data/gisaid/latest/haiti.latest.tsv"
    sequences: "/data/gisaid/latest/haiti.latest.fasta"
  - name: "worldwide" #nextregions/global.. would prefer larger set of sequences
    metadata: "/data/gisaid/latest/global.latest.tsv"
    sequences: "/data/gisaid/latest/global.latest.fasta"
  - name: "south-america" #nextregions/global.. would prefer larger set of sequences
    metadata: "/data/gisaid/latest/south-america.latest.tsv"
    sequences: "/data/gisaid/latest/south-america.latest.fasta"
    #  - name: "northamerica"
    #    metadata: "/data/gisaid/regions/ncov_north-america.tsv"
    #    sequences: "/data/gisaid/regions/ncov_north-america.fasta"

builds:
  haiti_build:
    subsampling_scheme: custom-scheme # use a custom subsampling scheme defined below
  haiti_splitcontext:
    subsampling_scheme: splitcontext # use a custom subsampling scheme defined below
    #  haiti_p1focus:
    #    subsampling_scheme: P1Focus # use a custom subsampling scheme defined below

# STAGE 1: Input-specific filtering parameters
filter:
  haiti:
    min_length: 5000 # Allow shorter genomes. Parameter used to filter alignment.
    skip_diagnostics: True # skip diagnostics (which can remove genomes) for this input

# STAGE 2: Subsampling parameters
subsampling:
  custom-scheme:
    # Use metadata key to include ALL from `input1`
    allFromHaiti:
      exclude: "--exclude-where 'haiti!=yes'" # subset to sequences from input `us`
      group_by: country
      max_sequences: 200
    # Proximity subsampling from `worldwide` input to provide context 
    worldwideContext:
      exclude: "--exclude-where 'haiti=yes'" # i.e. subset to sequences _not_ from input `aus`
      group_by: "year"    # NOTE: `augur filter` needs this to use `max_sequences` (TODO)
      max_sequences: 3000 
      priorities:
        type: "proximity"
        focus: "allFromHaiti"
    worldwideBackground:
      exclude: "--exclude-where 'haiti=yes'"
      group_by: year month
      seq_per_group: 5

subsampling:
  splitcontext:
    # Use metadata key to include ALL from `input1`
    allFromHaitiB:
      exclude: "--exclude-where 'haiti!=yes'" # subset to sequences from input `us`
      group_by: country
      max_sequences: 200
    # Proximity subsampling from `worldwide` input to provide context 
    worldwideContextB:
      exclude: "--include-where 'worldwide=yes'" # i.e. subset to sequences _not_ from input `aus`
      group_by: "year"    # NOTE: `augur filter` needs this to use `max_sequences` (TODO)
      max_sequences: 1000 
      priorities:
        type: "proximity"
        focus: "allFromHaiti"
    southamericaContextB:
      exclude: "--include-where 'south-america=yes'" # i.e. subset to sequences _not_ from input `aus`
      group_by: "year"    # NOTE: `augur filter` needs this to use `max_sequences` (TODO)
      max_sequences: 2000 
      priorities:
        type: "proximity"
        focus: "allFromHaiti"
    worldwideBackgroundB:
      exclude: "--exclude-where 'haiti=yes'"
      group_by: year month region
      seq_per_group: 5





files:
  auspice_config: "my_profiles/haiti/my_auspice_config.json"
  description: "my_profiles/haiti/my_description.md"

skip_travel_history_adjustment: True

traits:
  multiple-inputs:
    sampling_bias_correction: 2.5
    columns: ["country", "country_exposure", "division_exposure", "confidence"]
